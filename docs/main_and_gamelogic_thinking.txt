Die Logik hinter den beiden Files:

A. main.py
-------------------------------
importiert: random f端r M端nzwurf
importiert: initialize_game, player_turn, computer_turn, game_over from gamelogic.py
importiert: player_placing_ships from player
importiert: place_ships_randomly from computer
importiert: Grid (class) from grid

1. erstellt: Spieler Setup (direkt hier in main.py)
2. erstellt: Computer Setup (direkt hier in main.py)

5a. erstellt: board_player sichtbar
5aa. player_placing_ships

5b. erstellt: board_computer (unsichtbar)
5bb. place_ships_randomly

~ timer f端r player oder game over ~

6. coin flip

7. call initialize_game
8. loop: solange nicht gameover true
9. je nachdem wer coinflip gewonnen hat:
9a. call player_turn inkl hit and miss abfrage
9b. update grid_attack: sichtbar
9a. call computer_turn inkl hit and miss abfrage
9b. update grid_attack: unsichtbar
10. call game_over: hat Spieler / Computer keine S mehr am Grid

11: Wenn game_over true: spieler/computer hat gewonnen, print ausgabe

B. gamelogic
-------------------------------
importiert: from grid import Grid
importiert: from player import Player
importiert: from fleet import Fleet
importiert: from ship import Destroyer, Cruiser, Battleship, AircraftCarrier 
importiert: from hit_miss import check_hit_or_miss 

1. erstelle: def initialize_game
1a. player_grid (brauch ich das, wenn ichs in main hab?)
1b. computer_grid (brauch ich das, wenn ichs in main hab?)

1c. player setup = name
1d. computer setup = name

1e. Initialisiere die Flotten
1f. fleet_player (brauch ich das, wenn ichs in main hab, glaube nicht!)
1g. fleet_computer (brauch ich das, wenn ichs in main hab, glaube nicht!)

2. erstelle player_turn
2a. input coordinaten f端r grid computer
2b. hit/miss abfrage grid computer
2c. update grid computer (unsichtbar)
2d. Ausgabe: Coord/Treffer (print)

3. erstelle computer_turn
3a. random attacke innerhalb grid player
3b. hit/miss abfrage grid player
3c. update grid player (sichtbar)
3d. Ausgabe: Coord/Treffer (print)

4. erstelle check_game_over
4a. fleet_player.is_defeated or fleet_computer.is_defeated = true/false
